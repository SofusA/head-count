name: Test and deploy health check

on:
  push:
    branches: [main]
    paths:
      - sensor/**

  workflow_dispatch:

permissions:
    id-token: write
    contents: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout code
        uses: actions/checkout@v3

      - name: Setup | Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: x86_64-unknown-linux-musl

      - name: Setup | install dependencies
        run: sudo apt install -y musl-tools pkg-config libssl-dev clang

      - name: Setup | Test
        uses: actions-rs/cargo@v1
        env:
            TARGET_CC: clang
            OPENSSL_LIB_DIR: /usr/lib/i386-linux-gnu/
            OPENSSL_INCLUDE_DIR: /usr/include/openssl/
            DATABASE_SECRET: ${{ secrets.DATABASE_SECRET}}
            DATABASE_URL: ${{ secrets.DATABASE_URL}}
        with:
            command: build
            args: --manifest-path sensor/Cargo.toml --release --target=${{ matrix.target }}

  release:
    needs: test
    name: Deploy Azure Function
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout code
        uses: actions/checkout@v2

      - name: Setup | Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: x86_64-unknown-linux-musl

      - name: Setup | musl tools
        run: sudo apt install -y musl-tools

      - name: Build | Build
        working-directory: ./sensor
        run: cargo build --release --target x86_64-unknown-linux-musl

      - name: Deploy | Move binary
        working-directory: ./sensor/azure
        run: mv ../target/x86_64-unknown-linux-musl/release/handler .
      - name: Deploy | Compress deploy package
        run: zip -r deploy.zip handler v* host.json

      - name: Deploy | Authenticate
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy | Azure Function
        working-directory: ./sensor
        run: az functionapp deployment source config-zip -g ${{ secrets.AZURE_RESOURCE_GROUP }} -n ${{ secrets.AZURE_APP_NAME }} --src deploy.zip
